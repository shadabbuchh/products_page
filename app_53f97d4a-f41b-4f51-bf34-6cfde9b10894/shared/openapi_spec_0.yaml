openapi: 3.1.0
info:
  title: API for Products
  version: 1.0.0
  description: |
    RESTful API for managing products, including listing, retrieving, and updating product details.
    Provides filtering, pagination, and error handling.
servers:
  - url: /api/v1
paths:
  /products:
    get:
      summary: List products
      description: Retrieve a paginated list of products, with optional filtering and sorting.
      operationId: listProducts
      tags:
        - Products
      parameters:
        - name: search
          in: query
          required: false
          description: Search term to filter products by name or SKU
          schema:
            type: string
          example: 'laptop'
        - name: page
          in: query
          required: false
          description: The page number to retrieve
          schema:
            type: integer
            minimum: 1
          example: 1
        - name: limit
          in: query
          required: false
          description: Number of products per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 20
        - name: sort
          in: query
          required: false
          description: Field to sort by (e.g. price, name)
          schema:
            type: string
          example: 'price'
        - name: filter
          in: query
          required: false
          description: Filter expression (e.g., isVisible=true)
          schema:
            type: string
          example: 'isVisible=true'
      responses:
        '200':
          description: Successfully retrieved list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  total:
                    type: integer
                    description: Total number of products available
                required:
                  - products
                  - total
              examples:
                default:
                  summary: Example product list response
                  value:
                    products: []
                    total: 0
        '400':
          description: Bad request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /products/{id}:
    get:
      summary: Get product details
      description: Retrieve details for a specific product by its ID.
      operationId: getProductDetails
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the product
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product details found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                default:
                  summary: Example product details
                  value:
                    id: 'c56a4180-65aa-42ec-a945-5fd21dec0538'
                    name: 'Wireless Mouse'
                    sku: 'WM-1234'
                    price: 29.99
                    stock: 100
                    image: 'https://example.com/images/wm-1234.png'
                    lowStockThreshold: 10
                    createdAt: '2023-01-01T10:00:00Z'
                    updatedAt: '2023-01-10T15:30:00Z'
                    isVisible: true
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFound:
                  summary: Product not found error
                  value:
                    error: 'NotFound'
                    message: 'Product not found.'
    put:
      summary: Update product
      description: Update an existing product by its ID.
      operationId: updateProduct
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the product
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        description: Product fields to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
            examples:
              default:
                summary: Example update payload
                value:
                  name: 'Updated Product Name'
                  sku: 'SKU-1234'
                  price: 19.99
                  stock: 50
                  isVisible: true
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                updated:
                  summary: Successfully updated product
                  value:
                    id: 'c56a4180-65aa-42ec-a945-5fd21dec0538'
                    name: 'Updated Product Name'
                    sku: 'SKU-1234'
                    price: 19.99
                    stock: 50
                    image: 'https://example.com/images/wm-1234.png'
                    lowStockThreshold: 10
                    createdAt: '2023-01-01T10:00:00Z'
                    updatedAt: '2023-01-12T16:45:00Z'
                    isVisible: true
        '400':
          description: Bad request - Invalid update payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidPayload:
                  summary: Invalid update payload error
                  value:
                    error: 'BadRequest'
                    message: 'Invalid product update payload.'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFound:
                  summary: Product not found error
                  value:
                    error: 'NotFound'
                    message: 'Product not found.'
components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
        - sku
        - price
        - stock
        - isVisible
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the product
        name:
          type: string
          description: Name of the product
        sku:
          type: string
          description: Stock Keeping Unit identifier
        price:
          type: number
          format: float
          description: Unit price of the product
        stock:
          type: integer
          description: Available stock count
        image:
          type: string
          description: URL to the product image
        lowStockThreshold:
          type: integer
          description: Threshold below which stock is considered low
        createdAt:
          type: string
          format: date-time
          description: Timestamp when product was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when product was last updated
        isVisible:
          type: boolean
          description: Indicates if the product is visible to users
    ProductUpdate:
      type: object
      properties:
        name:
          type: string
          description: Updated name of the product
        sku:
          type: string
          description: Updated SKU
        price:
          type: number
          format: float
          description: Updated unit price
        stock:
          type: integer
          description: Updated stock count
        isVisible:
          type: boolean
          description: Updated visibility
    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error type identifier
        message:
          type: string
          description: Human-readable error message
